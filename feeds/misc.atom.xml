<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ant - misc</title><link href="devasops.github.io/" rel="alternate"></link><link href="devasops.github.io/feeds/misc.atom.xml" rel="self"></link><id>devasops.github.io/</id><updated>2010-12-03T10:20:00+08:00</updated><entry><title>k8s安装部署</title><link href="devasops.github.io/k8san-zhuang-bu-shu.html" rel="alternate"></link><published>2010-12-03T10:20:00+08:00</published><updated>2010-12-03T10:20:00+08:00</updated><author><name>ant</name></author><id>tag:None,2010-12-03:devasops.github.io/k8san-zhuang-bu-shu.html</id><summary type="html">&lt;h1&gt;集群安装方式对比&lt;/h1&gt;
&lt;p&gt;kops 是官方出的 Kubernetes Operations，生产级 K8s 的安装、升级和管理。
可以看做是适用于集群的 kubectl，kops 可帮助您从命令行创 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;集群安装方式对比&lt;/h1&gt;
&lt;p&gt;kops 是官方出的 Kubernetes Operations，生产级 K8s 的安装、升级和管理。
可以看做是适用于集群的 kubectl，kops 可帮助您从命令行创建，销毁，升级和维护生产级，高可用性的 Kubernetes 集群。
目前正式支持AWS（Amazon Web Services），其中 GCE 和 OpenStack 处于 beta 测试阶段，而 VMware vSphere 处于 alpha 阶段，并且计划其他平台。
可见，它对云平台结合紧密而提供独特功能，如果未来预见只使用某个云平台，那么相比 kubespray 是更好的选择。
kubeadm 官方维护的为了给创建 Kubernetes 集群提供最佳实践的一个工具，涉及集群生命周期管理等知识。
通过 kubeadm 命令来管理，kubeadm &amp;lt; init | join | upgrade | reset &amp;gt;。
kubespray 是部署生产环境就绪的 Kubernetes 集群的工具。kubernetes-sigs 组织维护。
特点是通过 Ansible 部署，所以相比 kops 方式，kubespray 是 OS 级别通用的部署方式（可以是裸机或者云）。
另外 kubespray 2.8 以上版本推荐用 kubeadm 创建集群，以便从中使用生命周期管理的实践 并 卸载其中 OS 配置的东西。相当于结合了 kubeadm 以及自身的优点。
GitHub地址：https://github.com/kubernetes-sigs/kubespray
推荐使用kubespray2.8以上版本部署k8s集群。&lt;/p&gt;
&lt;h1&gt;操作系统内核升级&lt;/h1&gt;
&lt;p&gt;Docker对内核的要求
Note: If you use OverlayFS, use the overlay2 driver rather than the overlay driver, because it is more efficient in terms of inode utilization. To use the new driver, you need version 4.0 or higher of the Linux kernel, or RHEL or CentOS using version 3.10.0-514 and above.&lt;/p&gt;
&lt;p&gt;For more information about differences between overlay vs overlay2, check Docker storage drivers.&lt;/p&gt;
&lt;h1&gt;升级centos7内核&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum&lt;span class="w"&gt; &lt;/span&gt;-y&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;elrepo-release

yum&lt;span class="w"&gt; &lt;/span&gt;--disablerepo&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--enablerepo&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;elrepo-kernel&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;list&lt;span class="w"&gt; &lt;/span&gt;available&lt;span class="w"&gt;    &lt;/span&gt;&amp;lt;查看可升级的内核版本&amp;gt;

yum&lt;span class="w"&gt; &lt;/span&gt;--enablerepo&lt;span class="o"&gt;=&lt;/span&gt;elrepo-kernel&lt;span class="w"&gt; &lt;/span&gt;-y&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;kernel-lt&lt;span class="w"&gt;   &lt;/span&gt;&amp;lt;安装长期lts支持版本&amp;gt;

&lt;span class="c1"&gt;#更改开机引导顺序&lt;/span&gt;
grub2-set-default&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CentOS Linux (5.4.125-1.el7.elrepo.x86_64) 7 (Core)&amp;#39;&lt;/span&gt;
grub2-mkconfig&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;/boot/grub2/grub.cfg
&lt;span class="c1"&gt;#查看引导顺序&lt;/span&gt;
grub2-editenv&lt;span class="w"&gt; &lt;/span&gt;list
&lt;span class="nv"&gt;saved_entry&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;CentOS&lt;span class="w"&gt; &lt;/span&gt;Linux&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;.4.125-1.el7.elrepo.x86_64&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Core&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#重启主机生效&lt;/span&gt;
reboot
Connection&lt;span class="w"&gt; &lt;/span&gt;closing...Socket&lt;span class="w"&gt; &lt;/span&gt;close.

uname&lt;span class="w"&gt; &lt;/span&gt;-a
Linux&lt;span class="w"&gt; &lt;/span&gt;xfcloud-test01&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;.4.125-1.el7.elrepo.x86_64&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 SMP Wed Jun 9 15:53:21 EDT 2021 x86_64 x86_64 x86_64 GNU/Linux&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;配置操作系统参数&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#操作系统安装基础包&lt;/span&gt;
yum&lt;span class="w"&gt; &lt;/span&gt;-y&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;curl&lt;span class="w"&gt; &lt;/span&gt;wget&lt;span class="w"&gt; &lt;/span&gt;telnet&lt;span class="w"&gt; &lt;/span&gt;vim&lt;span class="w"&gt; &lt;/span&gt;sysstat&lt;span class="w"&gt; &lt;/span&gt;cifs*&lt;span class="w"&gt; &lt;/span&gt;nfs-utils&lt;span class="w"&gt; &lt;/span&gt;net-tools&lt;span class="w"&gt; &lt;/span&gt;bash-completion&lt;span class="w"&gt; &lt;/span&gt;bash-completion-extras&lt;span class="w"&gt; &lt;/span&gt;ntp*&lt;span class="w"&gt; &lt;/span&gt;unzip&lt;span class="w"&gt; &lt;/span&gt;tree&lt;span class="w"&gt;  &lt;/span&gt;bind-utils&lt;span class="w"&gt; &lt;/span&gt;tcpdump&lt;span class="w"&gt; &lt;/span&gt;lrzsz&lt;span class="w"&gt; &lt;/span&gt;strace&lt;span class="w"&gt; &lt;/span&gt;lsof


&lt;span class="c1"&gt;# 所有节点配置k8s集群中必须的内核参数&lt;/span&gt;
cat&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;lt;&amp;lt;EOF  &amp;gt;&amp;gt;/etc/sysctl.d/k8s.conf&lt;/span&gt;
&lt;span class="s"&gt;#Network Bridge - Netfilter Call - IPv6 Tables&lt;/span&gt;
&lt;span class="s"&gt;net.bridge.bridge-nf-call-ip6tables=1&lt;/span&gt;
&lt;span class="s"&gt;net.bridge.bridge-nf-call-iptables=1&lt;/span&gt;
&lt;span class="s"&gt;# net.ipv4=/proc/sys/net/ipv4 ,ip_forward&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.ip_forward=1&lt;/span&gt;
&lt;span class="s"&gt;#net.ipv4.conf.all.forwarding=/proc/sys/net/ipv4/conf/all/forwarding&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.conf.all.forwarding=1&lt;/span&gt;
&lt;span class="s"&gt;#Neighbor Table  gc=Garbage Collection&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.neigh.default.gc_thresh1=4096&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.neigh.default.gc_thresh2=6144&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.neigh.default.gc_thresh3=8192&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.neigh.default.gc_interval=60&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.neigh.default.gc_stale_time=120&lt;/span&gt;

&lt;span class="s"&gt;#sysctls for k8s node config&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.tcp_slow_start_after_idle=0&lt;/span&gt;
&lt;span class="s"&gt;net.core.rmem_max=16777216&lt;/span&gt;
&lt;span class="s"&gt;fs.inotify.max_user_watches=524288&lt;/span&gt;
&lt;span class="s"&gt;kernel.softlockup_all_cpu_backtrace=1&lt;/span&gt;
&lt;span class="s"&gt;kernel.softlockup_panic=1&lt;/span&gt;
&lt;span class="s"&gt;fs.file-max=2097152&lt;/span&gt;
&lt;span class="s"&gt;fs.inotify.max_user_instances=8192&lt;/span&gt;
&lt;span class="s"&gt;fs.inotify.max_queued_events=16384&lt;/span&gt;
&lt;span class="s"&gt;vm.max_map_count=262144&lt;/span&gt;
&lt;span class="s"&gt;fs.may_detach_mounts=1&lt;/span&gt;
&lt;span class="s"&gt;net.core.netdev_max_backlog=16384&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.tcp_wmem=4096 12582912 16777216&lt;/span&gt;
&lt;span class="s"&gt;net.core.wmem_max=16777216&lt;/span&gt;
&lt;span class="s"&gt;net.core.somaxconn=32768&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.ip_forward=1&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.tcp_max_syn_backlog=8096&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.tcp_rmem=4096 12582912 16777216&lt;/span&gt;

&lt;span class="s"&gt;net.ipv6.conf.all.disable_ipv6=1&lt;/span&gt;
&lt;span class="s"&gt;net.ipv6.conf.default.disable_ipv6=1&lt;/span&gt;
&lt;span class="s"&gt;net.ipv6.conf.lo.disable_ipv6=1&lt;/span&gt;

&lt;span class="s"&gt;kernel.yama.ptrace_scope=0&lt;/span&gt;
&lt;span class="s"&gt;vm.swappiness=0&lt;/span&gt;

&lt;span class="s"&gt;# 可以控制core文件的文件名中是否添加pid作为扩展。&lt;/span&gt;
&lt;span class="s"&gt;kernel.core_uses_pid=1&lt;/span&gt;

&lt;span class="s"&gt;# Do not accept source routing&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.conf.default.accept_source_route=0&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.conf.all.accept_source_route=0&lt;/span&gt;

&lt;span class="s"&gt;# Promote secondary addresses when the primary address is removed&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.conf.default.promote_secondaries=1&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.conf.all.promote_secondaries=1&lt;/span&gt;

&lt;span class="s"&gt;# Enable hard and soft link protection&lt;/span&gt;
&lt;span class="s"&gt;fs.protected_hardlinks=1&lt;/span&gt;
&lt;span class="s"&gt;fs.protected_symlinks=1&lt;/span&gt;

&lt;span class="s"&gt;# 源路由验证&lt;/span&gt;
&lt;span class="s"&gt;# see details in https://help.aliyun.com/knowledge_detail/39428.html&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.conf.all.rp_filter=0&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.conf.default.rp_filter=0&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.conf.default.arp_announce = 2&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.conf.lo.arp_announce=2&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.conf.all.arp_announce=2&lt;/span&gt;

&lt;span class="s"&gt;# see details in https://help.aliyun.com/knowledge_detail/41334.html&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.tcp_max_tw_buckets=5000&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.tcp_syncookies=1&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.tcp_fin_timeout=30&lt;/span&gt;
&lt;span class="s"&gt;net.ipv4.tcp_synack_retries=2&lt;/span&gt;
&lt;span class="s"&gt;kernel.sysrq=1&lt;/span&gt;

&lt;span class="s"&gt;# For mysql&lt;/span&gt;
&lt;span class="s"&gt;fs.aio-max-nr=262144&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;


&lt;span class="c1"&gt;#生效参数&lt;/span&gt;
sysctl&lt;span class="w"&gt; &lt;/span&gt;--system
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;所有节点关闭防火墙、selinux 、swap等&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;disable&lt;span class="w"&gt; &lt;/span&gt;firewalld&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;stop&lt;span class="w"&gt; &lt;/span&gt;firewalld
systemctl&lt;span class="w"&gt; &lt;/span&gt;disable&lt;span class="w"&gt; &lt;/span&gt;NetworkManager&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;stop&lt;span class="w"&gt; &lt;/span&gt;NetworkManager
setenforce&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
cat&lt;span class="w"&gt; &lt;/span&gt;/etc/sysconfig/selinux
&lt;span class="nv"&gt;SELINUX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;disabled
swapoff&lt;span class="w"&gt; &lt;/span&gt;-a&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sysctl&lt;span class="w"&gt; &lt;/span&gt;-w&lt;span class="w"&gt; &lt;/span&gt;vm.swappiness&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;所有节点配置好时间同步&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;restart&lt;span class="w"&gt; &lt;/span&gt;ntpd&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;enable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ntpd&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;disable&lt;span class="w"&gt; &lt;/span&gt;chronyd&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;stop&lt;span class="w"&gt; &lt;/span&gt;chronyd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;在每个节点配置阿里云Docker YUM源加速，安装Docker并开机自启，否则系统重启后K8S会因为镜像没启动而失败&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-y&lt;span class="w"&gt; &lt;/span&gt;yum-utils&lt;span class="w"&gt; &lt;/span&gt;device-mapper-persistent-data&lt;span class="w"&gt; &lt;/span&gt;lvm2
yum-config-manager&lt;span class="w"&gt; &lt;/span&gt;--add-repo&lt;span class="w"&gt; &lt;/span&gt;https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
yum&lt;span class="w"&gt; &lt;/span&gt;makecache&lt;span class="w"&gt; &lt;/span&gt;fast
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;文件句柄优化&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sed&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/^*/d&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/etc/security/limits.conf
cat&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;/etc/security/limits.conf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class="s"&gt;*                soft    nofile          1000000&lt;/span&gt;
&lt;span class="s"&gt;*                hard    nofile          1000000&lt;/span&gt;
&lt;span class="s"&gt;*                soft    nproc           65535&lt;/span&gt;
&lt;span class="s"&gt;*                hard    nproc           65535&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;测试硬盘的io速率，etcd建议使用ssd硬盘&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# 随机读&lt;/span&gt;
fio&lt;span class="w"&gt; &lt;/span&gt;-name&lt;span class="o"&gt;=&lt;/span&gt;randread&lt;span class="w"&gt; &lt;/span&gt;-direct&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-iodepth&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-rw&lt;span class="o"&gt;=&lt;/span&gt;randread&lt;span class="w"&gt; &lt;/span&gt;-ioengine&lt;span class="o"&gt;=&lt;/span&gt;libaio&lt;span class="w"&gt; &lt;/span&gt;-bs&lt;span class="o"&gt;=&lt;/span&gt;4k&lt;span class="w"&gt; &lt;/span&gt;-size&lt;span class="o"&gt;=&lt;/span&gt;2G&lt;span class="w"&gt; &lt;/span&gt;-numjobs&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-runtime&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-group_reporting&lt;span class="w"&gt; &lt;/span&gt;-filename&lt;span class="o"&gt;=&lt;/span&gt;/tmp/test.dbf

&lt;span class="c1"&gt;# 随机写&lt;/span&gt;
fio&lt;span class="w"&gt; &lt;/span&gt;-name&lt;span class="o"&gt;=&lt;/span&gt;randwrite&lt;span class="w"&gt; &lt;/span&gt;-direct&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-iodepth&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-rw&lt;span class="o"&gt;=&lt;/span&gt;randwrite&lt;span class="w"&gt; &lt;/span&gt;-ioengine&lt;span class="o"&gt;=&lt;/span&gt;libaio&lt;span class="w"&gt; &lt;/span&gt;-bs&lt;span class="o"&gt;=&lt;/span&gt;4k&lt;span class="w"&gt; &lt;/span&gt;-size&lt;span class="o"&gt;=&lt;/span&gt;2G&lt;span class="w"&gt; &lt;/span&gt;-numjobs&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-runtime&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-group_reporting&lt;span class="w"&gt; &lt;/span&gt;-filename&lt;span class="o"&gt;=&lt;/span&gt;/tmp/test.dbf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;配置私有ftp服务器&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cat&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class="s2"&gt;&amp;quot;EOF&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;nginx.conf
server&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
listen&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;81&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;default_server&lt;span class="p"&gt;;&lt;/span&gt;
listen&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;::&lt;span class="o"&gt;]&lt;/span&gt;:81&lt;span class="w"&gt; &lt;/span&gt;default_server&lt;span class="p"&gt;;&lt;/span&gt;
server_name&lt;span class="w"&gt; &lt;/span&gt;ftp-test.iflytek.com&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;#listen 443 ssl http2 default_server;&lt;/span&gt;
&lt;span class="c1"&gt;#server_name ftp-test.iflytek.com;&lt;/span&gt;
&lt;span class="c1"&gt;#ssl_certificate &amp;quot;/etc/nginx/ssl/iflytek.com.crt&amp;quot;;&lt;/span&gt;
&lt;span class="c1"&gt;#ssl_certificate_key &amp;quot;/etc/nginx/ssl/iflytek.com.key&amp;quot;;&lt;/span&gt;
&lt;span class="c1"&gt;#ssl_session_cache shared:SSL:1m;&lt;/span&gt;
&lt;span class="c1"&gt;#ssl_session_timeout 10m;&lt;/span&gt;
&lt;span class="c1"&gt;#ssl_ciphers HIGH:!aNULL:!MD5;&lt;/span&gt;
&lt;span class="c1"&gt;#ssl_prefer_server_ciphers on;&lt;/span&gt;

location&lt;span class="w"&gt; &lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
root&lt;span class="w"&gt; &lt;/span&gt;/usr/share/nginx/data&lt;span class="p"&gt;;&lt;/span&gt;
autoindex&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="p"&gt;;&lt;/span&gt;
autoindex_exact_size&lt;span class="w"&gt; &lt;/span&gt;off&lt;span class="p"&gt;;&lt;/span&gt;
autoindex_localtime&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="p"&gt;;&lt;/span&gt;
limit_except&lt;span class="w"&gt; &lt;/span&gt;GET&lt;span class="w"&gt; &lt;/span&gt;POST&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
deny&lt;span class="w"&gt; &lt;/span&gt;all&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# set site favicon&lt;/span&gt;
location&lt;span class="w"&gt; &lt;/span&gt;~&lt;span class="w"&gt; &lt;/span&gt;^/favicon&lt;span class="se"&gt;\.&lt;/span&gt;ico$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
root&lt;span class="w"&gt; &lt;/span&gt;/usr/share/nginx/html&lt;span class="p"&gt;;&lt;/span&gt;
limit_except&lt;span class="w"&gt; &lt;/span&gt;GET&lt;span class="w"&gt; &lt;/span&gt;POST&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
deny&lt;span class="w"&gt; &lt;/span&gt;all&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Load configuration files for the default server block.&lt;/span&gt;
include&lt;span class="w"&gt; &lt;/span&gt;/etc/nginx/default.d/*.conf&lt;span class="p"&gt;;&lt;/span&gt;

error_page&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;404&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/404.html&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;location&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/404.html&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

error_page&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;502&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;503&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;504&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/50x.html&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;location&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/50x.html&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
EOF


cat&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class="s2"&gt;&amp;quot;EOF&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;default.conf
server&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;listen&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;listen&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;::&lt;span class="o"&gt;]&lt;/span&gt;:80&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;server_name&lt;span class="w"&gt;  &lt;/span&gt;ftp-test.iflytek.com&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;access_log&lt;span class="w"&gt;  &lt;/span&gt;/var/log/nginx/host.access.log&lt;span class="w"&gt;  &lt;/span&gt;main&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;location&lt;span class="w"&gt; &lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;root&lt;span class="w"&gt;   &lt;/span&gt;/usr/share/nginx/html&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;autoindex&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;autoindex_exact_size&lt;span class="w"&gt; &lt;/span&gt;off&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;autoindex_localtime&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;limit_except&lt;span class="w"&gt; &lt;/span&gt;GET&lt;span class="w"&gt; &lt;/span&gt;POST&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;deny&lt;span class="w"&gt; &lt;/span&gt;all&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;



&lt;span class="w"&gt;    &lt;/span&gt;error_page&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;502&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;503&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;504&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;/50x.html&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;location&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/50x.html&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;root&lt;span class="w"&gt;   &lt;/span&gt;/usr/share/nginx/html&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
EOF



&lt;span class="c1"&gt;#容器创建服务&lt;/span&gt;
mkdir&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;/data/public/nginx/&lt;span class="o"&gt;{&lt;/span&gt;conf,html,logs&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/data/public/nginx
docker&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;--detach&lt;span class="w"&gt; &lt;/span&gt;--rm&lt;span class="w"&gt; &lt;/span&gt;--name&lt;span class="w"&gt; &lt;/span&gt;k8snginx&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--publish&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;172&lt;/span&gt;.16.188.118:81:80&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--volume&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;/conf:/etc/nginx&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--volume&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;/html:/usr/share/nginx/html&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--volume&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;/logs:/var/log/nginx&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
nginx

mkdir&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;/data/public/nginx/html/&lt;span class="o"&gt;{&lt;/span&gt;images,kubernetes&lt;span class="o"&gt;}&lt;/span&gt;



kubelet_download_url:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://storage.googleapis.com/kubernetes-release/release/v1.19.9/bin/linux/amd64/kubelet&amp;quot;&lt;/span&gt;
kubectl_download_url:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://storage.googleapis.com/kubernetes-release/release/v1.19.9/bin/linux/amd64/kubectl&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# kubeadm_download_url: &amp;quot;https://storage.googleapis.com/kubernetes-release/release/v1.19.9/bin/linux/amd64/kubeadm&amp;quot;&lt;/span&gt;
etcd_download_url:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://github.com/coreos/etcd/releases/download/v3.4.9/etcd-v3.4.9-linux-amd64.tar.gz&amp;quot;&lt;/span&gt;
cni_download_url:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://github.com/containernetworking/plugins/releases/download/v0.9.0/cni-plugins-linux-amd64-v0.9.0.tgz&amp;quot;&lt;/span&gt;
calicoctl_download_url:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://github.com/projectcalico/calicoctl/releases/download/v3.16.9/calicoctl-linux-amd64&amp;quot;&lt;/span&gt;
calico_crds_download_url:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://github.com/projectcalico/calico/archive/v3.16.9.tar.gz&amp;quot;&lt;/span&gt;
crictl_download_url:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ crictl_version }}/crictl-{{ crictl_version }}-{{ ansible_system | lower }}-{{ image_arch }}.tar.gz&amp;quot;&lt;/span&gt;

helm_download_url:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{{ files_repo }}/helm-{{ helm_version }}-linux-{{ image_arch }}.tar.gz&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;harbol 离线安装&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget&lt;span class="w"&gt; &lt;/span&gt;https://github.com/goharbor/harbor/releases/download/v2.2.2/harbor-offline-installer-v2.2.2.tgz



&lt;span class="c1"&gt;# generator criti&lt;/span&gt;
mkdir&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;/data/cert&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/data/cert


&lt;span class="c1"&gt;#创建 CA 根证书&lt;/span&gt;
openssl&lt;span class="w"&gt; &lt;/span&gt;req&lt;span class="w"&gt;  &lt;/span&gt;-newkey&lt;span class="w"&gt; &lt;/span&gt;rsa:4096&lt;span class="w"&gt; &lt;/span&gt;-nodes&lt;span class="w"&gt; &lt;/span&gt;-sha256&lt;span class="w"&gt; &lt;/span&gt;-keyout&lt;span class="w"&gt; &lt;/span&gt;ca.key&lt;span class="w"&gt; &lt;/span&gt;-x509&lt;span class="w"&gt; &lt;/span&gt;-days&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;365&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-out&lt;span class="w"&gt; &lt;/span&gt;ca.crt&lt;span class="w"&gt; &lt;/span&gt;-subj&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/C=CN/L=zhejiang/O=lisea/CN=harbor-registry&amp;quot;&lt;/span&gt;


&lt;span class="c1"&gt;#生成一个证书签名, 设置访问域名为 harborvip.iflytek.com&lt;/span&gt;
openssl&lt;span class="w"&gt; &lt;/span&gt;req&lt;span class="w"&gt; &lt;/span&gt;-newkey&lt;span class="w"&gt; &lt;/span&gt;rsa:4096&lt;span class="w"&gt; &lt;/span&gt;-nodes&lt;span class="w"&gt; &lt;/span&gt;-sha256&lt;span class="w"&gt; &lt;/span&gt;-keyout&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com.key&lt;span class="w"&gt; &lt;/span&gt;-out&lt;span class="w"&gt; &lt;/span&gt;server.csr&lt;span class="w"&gt; &lt;/span&gt;-subj&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/C=CN/L=zhejiang/O=lisea/CN=harborvip.iflytek.com&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;#生成主机的证书&lt;/span&gt;
openssl&lt;span class="w"&gt; &lt;/span&gt;x509&lt;span class="w"&gt; &lt;/span&gt;-req&lt;span class="w"&gt; &lt;/span&gt;-days&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;365&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-in&lt;span class="w"&gt; &lt;/span&gt;server.csr&lt;span class="w"&gt; &lt;/span&gt;-CA&lt;span class="w"&gt; &lt;/span&gt;ca.crt&lt;span class="w"&gt; &lt;/span&gt;-CAkey&lt;span class="w"&gt; &lt;/span&gt;ca.key&lt;span class="w"&gt; &lt;/span&gt;-CAcreateserial&lt;span class="w"&gt; &lt;/span&gt;-out&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com.crt






&lt;span class="c1"&gt;#参考链接：https://goharbor.io/docs/2.0.0/install-config/configure-https&lt;/span&gt;
&lt;span class="c1"&gt;#第一个生成的是证书颁发机构(CA)的证书和私钥，它用来签署和验证别的证书。换句话说，它是用来证明别的证书是可信的。&lt;/span&gt;
&lt;span class="c1"&gt;#生成CA证书私钥&lt;/span&gt;
openssl&lt;span class="w"&gt; &lt;/span&gt;genrsa&lt;span class="w"&gt; &lt;/span&gt;-out&lt;span class="w"&gt; &lt;/span&gt;ca.key&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;

&lt;span class="c1"&gt;#用这个私钥，生成加密的CA证书&lt;/span&gt;
openssl&lt;span class="w"&gt; &lt;/span&gt;req&lt;span class="w"&gt; &lt;/span&gt;-x509&lt;span class="w"&gt; &lt;/span&gt;-new&lt;span class="w"&gt; &lt;/span&gt;-nodes&lt;span class="w"&gt; &lt;/span&gt;-sha512&lt;span class="w"&gt; &lt;/span&gt;-days&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3650&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;-subj&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=harborvip.iflytek.com&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;-key&lt;span class="w"&gt; &lt;/span&gt;ca.key&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;-out&lt;span class="w"&gt; &lt;/span&gt;ca.crt


&lt;span class="c1"&gt;#第二个生成的是具体服务器的私钥和证书签名请求(CSR)&lt;/span&gt;
&lt;span class="c1"&gt;#生成私钥&lt;/span&gt;
openssl&lt;span class="w"&gt; &lt;/span&gt;genrsa&lt;span class="w"&gt; &lt;/span&gt;-out&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com.key&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;

&lt;span class="c1"&gt;#生成证书签名请求（CSR）&lt;/span&gt;
openssl&lt;span class="w"&gt; &lt;/span&gt;req&lt;span class="w"&gt; &lt;/span&gt;-sha512&lt;span class="w"&gt; &lt;/span&gt;-new&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-subj&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=harborvip.iflytek.com&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-key&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com.key&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-out&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com.csr


&lt;span class="c1"&gt;#生成 x509 v3 扩展文件&lt;/span&gt;
cat&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;v3.ext&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;lt;&amp;lt;-EOF&lt;/span&gt;
&lt;span class="s"&gt;authorityKeyIdentifier=keyid,issuer&lt;/span&gt;
&lt;span class="s"&gt;basicConstraints=CA:FALSE&lt;/span&gt;
&lt;span class="s"&gt;keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment&lt;/span&gt;
&lt;span class="s"&gt;extendedKeyUsage = serverAuth&lt;/span&gt;
&lt;span class="s"&gt;subjectAltName = @alt_names&lt;/span&gt;

&lt;span class="s"&gt;[alt_names]&lt;/span&gt;
&lt;span class="s"&gt;DNS.1=harborvip.iflytek.com&lt;/span&gt;
&lt;span class="s"&gt;DNS.2=yourdomain&lt;/span&gt;
&lt;span class="s"&gt;DNS.3=hostname&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;

&lt;span class="c1"&gt;#使用v3扩展配置，生成服务器的证书文件&lt;/span&gt;
openssl&lt;span class="w"&gt; &lt;/span&gt;x509&lt;span class="w"&gt; &lt;/span&gt;-req&lt;span class="w"&gt; &lt;/span&gt;-sha512&lt;span class="w"&gt; &lt;/span&gt;-days&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3650&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-extfile&lt;span class="w"&gt; &lt;/span&gt;v3.ext&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-CA&lt;span class="w"&gt; &lt;/span&gt;ca.crt&lt;span class="w"&gt; &lt;/span&gt;-CAkey&lt;span class="w"&gt; &lt;/span&gt;ca.key&lt;span class="w"&gt; &lt;/span&gt;-CAcreateserial&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-in&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com.csr&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-out&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com.crt


&lt;span class="c1"&gt;#给容器配置证书，应为容器以cert作为ca证书后缀，所以需要转换下&lt;/span&gt;
openssl&lt;span class="w"&gt; &lt;/span&gt;x509&lt;span class="w"&gt; &lt;/span&gt;-inform&lt;span class="w"&gt; &lt;/span&gt;PEM&lt;span class="w"&gt; &lt;/span&gt;-in&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com.crt&lt;span class="w"&gt; &lt;/span&gt;-out&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com.cert


&lt;span class="c1"&gt;#复制证书文件到docker配置目录中&lt;/span&gt;

&lt;span class="c1"&gt;#建立docker证书配置目录&lt;/span&gt;
mkdir&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;/etc/docker/certs.d/harborvip.iflytek.com:443

cp&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com.cert&lt;span class="w"&gt; &lt;/span&gt;/etc/docker/certs.d/harborvip.iflytek.com:443/
cp&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com.key&lt;span class="w"&gt; &lt;/span&gt;/etc/docker/certs.d/harborvip.iflytek.com:443/
cp&lt;span class="w"&gt; &lt;/span&gt;ca.crt&lt;span class="w"&gt; &lt;/span&gt;/etc/docker/certs.d/harborvip.iflytek.com:443/

systemctl&lt;span class="w"&gt; &lt;/span&gt;restart&lt;span class="w"&gt; &lt;/span&gt;docker



&lt;span class="c1"&gt;# update config&lt;/span&gt;

vim&lt;span class="w"&gt; &lt;/span&gt;harbor.yml
&lt;span class="c1"&gt;# DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.&lt;/span&gt;
hostname:&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com

https:
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;# https port for harbor, default is 443&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;port:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;443&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;# The path of cert and key files for nginx&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;certificate:&lt;span class="w"&gt; &lt;/span&gt;/data/cert/harborvip.iflytek.com.crt
&lt;span class="w"&gt;  &lt;/span&gt;private_key:&lt;span class="w"&gt; &lt;/span&gt;/data/cert/harborvip.iflytek.com.key





&lt;span class="c1"&gt;# Deploy or Reconfigure Harbor&lt;/span&gt;
./prepare

&lt;span class="c1"&gt;# deploy harbor&lt;/span&gt;
./install.sh&lt;span class="w"&gt; &lt;/span&gt;--with-notary&lt;span class="w"&gt; &lt;/span&gt;--with-trivy&lt;span class="w"&gt; &lt;/span&gt;--with-chartmuseum



docker&lt;span class="w"&gt; &lt;/span&gt;ps&lt;span class="w"&gt; &lt;/span&gt;-a

&lt;span class="c1"&gt;#restart&lt;/span&gt;
docker-compose&lt;span class="w"&gt; &lt;/span&gt;down&lt;span class="w"&gt; &lt;/span&gt;-v
docker-compose&lt;span class="w"&gt; &lt;/span&gt;up&lt;span class="w"&gt; &lt;/span&gt;-d





&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/root/harbor&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;docker-compose&lt;span class="w"&gt; &lt;/span&gt;ps&lt;span class="w"&gt; &lt;/span&gt;-a


&lt;span class="c1"&gt;# restart &lt;/span&gt;
docker-compose&lt;span class="w"&gt; &lt;/span&gt;restart


&lt;span class="c1"&gt;# login&lt;/span&gt;
&lt;span class="m"&gt;172&lt;/span&gt;.16.188.118&lt;span class="w"&gt;  &lt;/span&gt;harborvip.iflytek.com

admin/Harbor12345
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;上传镜像到harbol中&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# mirror address&lt;/span&gt;
&lt;span class="c1"&gt;# gcr and kubernetes image repo define&lt;/span&gt;
gcr_image_repo:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;gcr.io&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;now:&lt;span class="w"&gt; &lt;/span&gt;https://console.cloud.google.com/gcr/images/google-containers/global
kube_image_repo:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;k8s.gcr.io&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# docker image repo define&lt;/span&gt;
docker_image_repo:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;docker.io&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# quay image repo define&lt;/span&gt;
quay_image_repo:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;quay.io&amp;quot;&lt;/span&gt;




docker&lt;span class="w"&gt; &lt;/span&gt;login&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com


&lt;span class="c1"&gt;#download k8s images to private harbor&lt;/span&gt;
docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;registry.aliyuncs.com/google_containers/kube-apiserver:v1.18.17
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt; &lt;/span&gt;registry.aliyuncs.com/google_containers/kube-apiserver:v1.18.17&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/kube-apiserver:v1.18.17
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/kube-apiserver:v1.18.17



docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;registry.aliyuncs.com/google_containers/kube-proxy:v1.18.17
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt; &lt;/span&gt;registry.aliyuncs.com/google_containers/kube-proxy:v1.18.17&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/kube-proxy:v1.18.17
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/kube-proxy:v1.18.17

docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;registry.aliyuncs.com/google_containers/kube-controller-manager:v1.18.17
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt;  &lt;/span&gt;registry.aliyuncs.com/google_containers/kube-controller-manager:v1.18.17&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/kube-controller-manager:v1.18.17
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/kube-controller-manager:v1.18.17

docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;registry.aliyuncs.com/google_containers/kube-scheduler:v1.18.17
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt; &lt;/span&gt;registry.aliyuncs.com/google_containers/kube-scheduler:v1.18.17&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/kube-scheduler:v1.18.17
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/kube-scheduler:v1.18.17


docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;calico/node:v3.16.9
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt;  &lt;/span&gt;calico/node:v3.16.9&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/calico/node:v3.16.9
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/calico/node:v3.16.9


docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;calico/cni:v3.16.9
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt;  &lt;/span&gt;calico/cni:v3.16.9&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/calico/cni:v3.16.9
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/calico/cni:v3.16.9


docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;calico/kube-controllers:v3.16.9
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt;  &lt;/span&gt;calico/kube-controllers:v3.16.9&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/calico/kube-controllers:v3.16.9
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/calico/kube-controllers:v3.16.9

docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;liz2019/k8s-dns-node-cache:1.17.1
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt; &lt;/span&gt;liz2019/k8s-dns-node-cache:1.17.1&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/dns/k8s-dns-node-cache:1.17.1
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/dns/k8s-dns-node-cache:1.17.1


docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;dyrnq/local-volume-provisioner:v2.4.0
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt; &lt;/span&gt;dyrnq/local-volume-provisioner:v2.4.0&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/external_storage/local-volume-provisioner:v2.4.0
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/external_storage/local-volume-provisioner:v2.4.0


docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;registry.aliyuncs.com/google_containers/etcd:3.4.3-0
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt; &lt;/span&gt;registry.aliyuncs.com/google_containers/etcd:3.4.3-0&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/etcd:3.4.3-0
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/etcd:3.4.3-0


&lt;span class="c1"&gt;#可以将gcr.io替换成gcr.lank8s.cn&lt;/span&gt;
docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;gcr.lank8s.cn/google-containers/cluster-proportional-autoscaler-amd64:1.8.1
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt; &lt;/span&gt;gcr.lank8s.cn/google-containers/cluster-proportional-autoscaler-amd64:1.8.1&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/cluster-proportional-autoscaler-amd64:1.8.1
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/cluster-proportional-autoscaler-amd64:1.8.1

&lt;span class="c1"&gt;#&lt;/span&gt;
docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;siriuszg/addon-resizer
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt; &lt;/span&gt;siriuszg/addon-resizer&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/addon-resizer
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/addon-resizer


&lt;span class="c1"&gt;#&lt;/span&gt;
docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;kubernetesui/dashboard-amd64
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt; &lt;/span&gt;kubernetesui/dashboard-amd64&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/kubernetesui/dashboard-amd64
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt;  &lt;/span&gt;harborvip.iflytek.com/kubernetesui/dashboard-amd64



docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;registry.aliyuncs.com/google_containers/coredns:1.7.0
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt; &lt;/span&gt;registry.aliyuncs.com/google_containers/coredns:1.7.0&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/coredns:1.7.0
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/coredns:1.7.0


docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;registry.aliyuncs.com/google_containers/pause:3.3
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt; &lt;/span&gt;registry.aliyuncs.com/google_containers/pause:3.3&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/pause:3.3
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/pause:3.3

docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;bitnami/metrics-server
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt; &lt;/span&gt;bitnami/metrics-server&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/metrics-server
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/google_containers/metrics-server

docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;kubernetesui/metrics-scraper
docker&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt;  &lt;/span&gt;kubernetesui/metrics-scraper&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/kubernetesui/metrics-scraper
docker&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;harborvip.iflytek.com/kubernetesui/metrics-scraper
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;集群的安装部署&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#download kubespray&lt;/span&gt;
https://codeload.github.com/kubernetes-sigs/kubespray/zip/refs/tags/v2.15.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;集群环境介绍&lt;/h2&gt;
&lt;p&gt;NAME            STATUS  ROLES   AGE VERSION&lt;br&gt;
devops-test01   Ready           20h v1.18.17        工作节点,   harbor,ftp(81,80,443)   &lt;br&gt;
devops-test02   Ready           20h v1.18.17        工作节点，ingress-nginx(80,443)
devops-test03   Ready           19h v1.18.17        工作节点，ingress-nginx(80,443)
xfcloud-test01  Ready   master  20h v1.18.17        仅集群调度，etcd节点
xfcloud-test02  Ready   master  20h v1.18.17        仅集群调度，etcd节点
xfcloud-test03  Ready   master  20h v1.18.17        仅集群调度，etcd节点&lt;/p&gt;
&lt;h2&gt;master01节点安装ansible服务并安装依赖软件包&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-y&lt;span class="w"&gt; &lt;/span&gt;python-pip&lt;span class="w"&gt; &lt;/span&gt;python36&lt;span class="w"&gt; &lt;/span&gt;python36-pip&lt;span class="w"&gt; &lt;/span&gt;ansible
pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--upgrade&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;https://mirrors.aliyun.com/pypi/simple/

wget&lt;span class="w"&gt; &lt;/span&gt;https://codeload.github.com/kubernetes-sigs/kubespray/zip/refs/tags/v2.15.1
mv&lt;span class="w"&gt; &lt;/span&gt;v2.15.1&lt;span class="w"&gt; &lt;/span&gt;kubespray-2.15.1.zip
unzip&lt;span class="w"&gt; &lt;/span&gt;kubespray-2.15.1.zip
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;kubespray-2.15.1
pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;https://mirrors.aliyun.com/pypi/simple/&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;requirements.txt

&lt;span class="c1"&gt;#配置ssh免密登录&lt;/span&gt;
ssh-copy-id&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;/root/.ssh/id_rsa.pub&lt;span class="w"&gt;  &lt;/span&gt;root@172.16.188.118

&lt;span class="c1"&gt;#配置ansible服务&lt;/span&gt;
vim&lt;span class="w"&gt; &lt;/span&gt;/etc/ansible/hosts
&lt;span class="o"&gt;[&lt;/span&gt;k8s-cluster&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="m"&gt;172&lt;/span&gt;.16.188.166
&lt;span class="m"&gt;172&lt;/span&gt;.16.188.118

&lt;span class="c1"&gt;#所有节点安装python3服务&lt;/span&gt;
ansible&lt;span class="w"&gt; &lt;/span&gt;k8s-cluster&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;shell&lt;span class="w"&gt; &lt;/span&gt;-a&lt;span class="s2"&gt;&amp;quot;yum install -y python-pip python36 python36-pip&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;定制kubespray配置文件&lt;/h2&gt;
&lt;p&gt;主要修改inentory和roles目录下的文件，修改下载文件及镜像地址为私有仓库，及一些服务参数的优化，详情见安装文件“kubespray-2.15.2”&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vim&lt;span class="w"&gt; &lt;/span&gt;roles/download/defaults/main.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;安装K8s集群&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;requirements.txt


cp&lt;span class="w"&gt; &lt;/span&gt;-rfp&lt;span class="w"&gt; &lt;/span&gt;inventory/sample&lt;span class="w"&gt; &lt;/span&gt;inventory/mycluster
&lt;span class="nb"&gt;declare&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-a&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;IPS&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="m"&gt;172&lt;/span&gt;.16.188.166&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;172&lt;/span&gt;.16.188.118&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;CONFIG_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;inventory/mycluster/hosts.yaml&lt;span class="w"&gt; &lt;/span&gt;python3&lt;span class="w"&gt; &lt;/span&gt;contrib/inventory_builder/inventory.py&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;IPS&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;


cat&lt;span class="w"&gt; &lt;/span&gt;inventory/mycluster/group_vars/all/all.yml
cat&lt;span class="w"&gt; &lt;/span&gt;inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml

ansible-playbook&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;inventory/mycluster/hosts.yaml&lt;span class="w"&gt;  &lt;/span&gt;--become&lt;span class="w"&gt; &lt;/span&gt;--become-user&lt;span class="o"&gt;=&lt;/span&gt;root&lt;span class="w"&gt; &lt;/span&gt;cluster.yml&lt;span class="w"&gt; &lt;/span&gt;-v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category></entry></feed>